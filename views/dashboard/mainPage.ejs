<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Product Form</title>
    <style>
        body {
            margin: 0;
            padding: 0;
            font-family: Arial, sans-serif;
        }

        .sidebar {
            background-color: rgb(240, 237, 237);
            position: fixed;
            top: 0;
            left: 0;
            width: 20%;
            height: 100%;
            overflow-y: auto;
            padding-top: 50px;
        }

        .logo {
            text-align: center;
            margin-bottom: 20px;
        }

        .logo img {
            width: 120px;
            height: 80px;
            border-radius: 50%;
        }

        .sidebar a {
            display: block;
            padding: 10px 20px;
            margin-bottom: 10px;
            border-radius: 5px;
            background-color: rgb(195, 194, 196);
            text-align: center;
            text-decoration: none;
            color: #fff;
        }

        .sidebar a:hover {
            background-color: rgb(209, 206, 211);
        }

        .popup {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: rgba(0, 0, 0, 0.5);
            padding: 20px;
            border-radius: 5px;
            z-index: 999;
        }

        .popup-content {
            background-color: #fefefe;
            padding: 30px;
            width: 200px;
            border-radius: 5px;
        }

        .close {
            position: absolute;
            top: 3px;
            right: 10px;
            font-size: 20px;
            color: #ffffff;
            cursor: pointer;
        }

        label {
            display: block;
            margin-bottom: 10px;
        }

        textarea,
        .file-input {
            width: 100%;
            padding: 10px;
            margin-bottom: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
            resize: vertical;
        }

        .file-input-label {
            display: block;
            padding: 10px;
            background-color: #c4340c;
            color: #fff;
            text-align: center;
            border-radius: 5px;
            cursor: pointer;
        }

        .file-input-label:hover {
            background-color: #971907;
        }

        button[type="submit"] {
            padding: 10px 20px;
            background-color: #228B22;
            color: #fff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        button[type="submit"]:hover {
            background-color: #1B5E20;
        }

        .logout {
            position: absolute;
            bottom: 10%;
            left: 50%;
            transform: translateX(-50%);
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            background-color: #c4340c;
            color: #fff;
            cursor: pointer;
        }

        body {
            background-color: rgb(255, 255, 255);
            font-family: Arial, sans-serif;
        }

        .p {
            font-size: 36px;
            font-weight: bold;
            margin-left: 20px;
            margin-top: 20px;
            margin-bottom: 40px;
        }

        .card-container {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
        }

        .card {
            width: 300px;
            margin: 20px;
            padding: 10px;
            border-radius: 10px;
            background-color: #fff;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease-in-out;
            position: relative;
            left: 10%;
        }


        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
        }

        .card img {
            width: 100%;
            border-top-left-radius: 10px;
            border-top-right-radius: 10px;
        }

        .card-body {
            padding: 15px;
        }

        .card-description {
            font-size: 16px;
            color: #333;
        }



        /* Popup styles */
        .popup_-overlay_ {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: max-content;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.7);
            z-index: 999;
            overflow: auto;
        }

        .popup_ {
            position: relative;
            margin: 5% auto;
            padding: 20px;
            background-color: #fff;
            border-radius: 5px;
            max-width: 80%;
            text-align: center;
        }

        .popup_ img {
            max-width: 100%;
            max-height: 80vh;
            border-radius: 5px;
        }

        .close {
            position: absolute;
            top: 10px;
            right: 20px;
            font-size: 24px;
            cursor: pointer;
            color: #fff;
        }

        #selectedImage {
            max-width: 200px;
            max-height: 200px;
        }



        .logout:hover {
            background-color: #b01a05;
        }

        @media screen and (max-width: 768px) {
            .sidebar {
                background-color: rgb(240, 237, 237);
                position: fixed;
                top: 0;
                left: 0;
                width: 50%;
                height: 100%;
                overflow-y: auto;
                padding-top: 50px;
            }

            .popup {
                width: 100px;
                display: none;
                position: fixed;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                background-color: rgba(0, 0, 0, 0.5);
                padding: 20px;
                border-radius: 5px;
                z-index: 999;
            }
        }
    </style>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
</head>

<body>
    <!-- Sidebar -->
    <div class="sidebar">
        <div class="logo">
            <img src="images/logo.png" alt="Logo">
        </div>
        <a id="add-button">Add a new product</a>
        <a id="home">Go to home page</a>
        <button id="logout" class="logout">Logout</button>
    </div>
    <div class="card-container">
        <% if (products && products.length> 0) { %>
            <% products.forEach((product,index)=> { %>
                <div class="card">
                    <img src="images/products/<%= product.path %>" class="card-img" alt="Product Image">
                    <div class="card-body">
                        <p class="card-description">
                            <%= product.description %>
                        </p>
                    </div>
                    <div class="row">
                        <i onclick="delete_P('<%= product._id %>')" class="fas fa-trash-alt "
                            style="color: #c4340c;"></i>
                        <i class="fas fa-edit update-popup-b" id="update-popup-b-<%= index %>"
                            style="color: rgb(45, 149, 205); margin-left: 20px;"></i>
                    </div>

                </div>
                <% }); %>
                    <% } else { %>
                        <p
                            style="position: relative; left:10% ; top: 300px; font-family:Verdana, Geneva, Tahoma, sans-serif ;">
                            No products found.</p>
                        <% } %>
    </div>
    <% if (products && products.length> 0) { %>
        <% products.forEach((product,index)=> { %>
            <div id="update-popup-<%= index %>" class="popup">
                <div class="popup-content">
                    <span class="close close-update" style="position: relative; top: -50px; left: 115%;"
                        id="closeUpdate">&times;</span>
                    <h2> Update Product </h2>
                    <form method="POST" id="updateproductForm-<%= index %>">
                        <label for="description">Product Description:</label>
                        <textarea id="description-<%= index %>" name=description"
                            required><%= products[index].description%></textarea>
                        <img id="selectedImage-<%= index %>" style="width: 50%;"
                            src="images/products/<%= product.path %>">
                        <!-- <label class="file-input-label" for="picture">Choose Product Image</label> -->
                        <input class="file-input" type="file" id="up_picture-<%= index %>" name="picture"
                            accept="image/*" onchange="showFileName('<%= index %>')">

                        <button type="submit"
                            onclick="update_p('<%= products[index]._id %>','<%=index %>')">Update</button>
                    </form>
                </div>
            </div>
            <% }); %>
                <% } else { %>

                    <% } %>
                        <div id="popup" class="popup">
                            <div class="popup-content">
                                <span class="close" id="closePopup"
                                    style="position: relative; top: -50px; left: 115%;">&times;</span>
                                <h2>Product Form</h2>
                                <form method="POST" id="productForm">
                                    <label for="description">Product Description:</label>
                                    <textarea id="description" name="description" required></textarea>
                                    <img id="selectedImage" src="#">
                                    <!-- <label class="file-input-label" for="picture">Choose Product Image</label> -->
                                    <input class="file-input" type="file" id="picture" onchange="a_showFileName()"
                                        name="picture" accept="image/*" required>

                                    <button type="submit">Submit</button>
                                </form>
                            </div>
                        </div>
                        <script>
                            const popup = document.getElementById('popup');
                            // const openPopupButton = document.getElementById('add-button');
                            // const closePopupButton = document.getElementById('closePopup');

                            const update_popup = document.getElementById('update-popup');

                            const logout = document.getElementById('logout')
                            const home = document.getElementById('home')
                            const Delete = document.getElementById('delete')
                            const pictureInput = document.getElementById('picture');
                            const updatePic = document.getElementById('up_picture');
                            const selectedImage = document.getElementById('selectedImage');
                            const up_selectedImage = document.getElementById('up_selectedImage');


                            function showFileName(index) {
                                const input = document.getElementById(`up_picture-${index}`);
                                const fileNameSpan = document.getElementById(`fileName-${index}`);
                                const selectedImage = document.getElementById(`selectedImage-${index}`);
                                input.addEventListener('change', function (event) {

                                    if (input.files && input.files.length > 0) {
                                        fileNameSpan.textContent = input.files[0].name;
                                        const reader = new FileReader();
                                        reader.onload = function (event) {
                                            selectedImage.src = event.target.result;
                                        }
                                        reader.readAsDataURL(input.files[0]);
                                    } else {
                                        fileNameSpan.textContent = '';
                                        selectedImage.src = ''; // Clear image source if no file selected
                                    }
                                });
                            }



                            document.addEventListener('DOMContentLoaded', function () {
                                const updatePopupButtons = document.querySelectorAll('.update-popup-b');
                                const closeUpdateButtons = document.querySelectorAll('.close-update');
                                console.log(updatePopupButtons);
                                updatePopupButtons.forEach(function (button, index) {
                                    button.addEventListener('click', function () {
                                        const updatePopup = document.getElementById('update-popup-' + index);
                                        console.log(updatePopup);
                                        updatePopup.style.display = 'block';
                                    });
                                });

                                closeUpdateButtons.forEach(function (button, index) {
                                    button.addEventListener('click', function () {
                                        const updatePopup = document.getElementById('update-popup-' + index);
                                        updatePopup.style.display = 'none';
                                    });
                                });

                                // Other JavaScript code for functionality like adding, deleting products, etc.
                            });
                            function a_showFileName() {
                                const input = document.getElementById('picture');
                                const fileNameSpan = document.getElementById('selectedImage');

                                if (input.files && input.files.length > 0) {
                                    const reader = new FileReader();
                                    reader.onload = function (event) {
                                        fileNameSpan.src = event.target.result;
                                    }
                                    reader.readAsDataURL(input.files[0]);
                                }
                            }



                            home.addEventListener('click', function () {
                                location.assign('/')
                            })

                            function update_p(id, index) {
                                const form = document.getElementById(`updateproductForm-${index}`); // Replace 'your_form_id' with the actual ID of your form
                                form.addEventListener('submit', function (event) {
                                    event.preventDefault(); 
                                    const picture = document.getElementById(`up_picture-${index}`).files[0];
                                    const description = document.getElementById(`description-${index}`).value; // Modified to match the textarea ID
                                    const formData = new FormData();
                                    formData.append('description', description);
                                    formData.append('picture', picture);

                                    fetch(`/api/Products/${id}`, {
                                        method: 'put',
                                        body: formData
                                    })
                                        .then(response => {
                                            if (!response.ok) {
                                                throw new Error('Network response was not ok');
                                            }
                                            return response.json();
                                        })
                                        .then(data => {
                                            console.log('Response:', data);
                                            alert(data.message); // Show success message
                                        })
                                        .catch(error => {
                                            location.reload();
                                            alert('Error:', error.message);

                                        });
                                });
                            }

                            


                            function delete_P(id) {
                                fetch(`/api/products/${id}`, {
                                    method: 'delete',
                                })
                                    .then(response => {
                                        if (!response.ok) {
                                            throw new Error('Network response was not ok');
                                        }
                                        return response.json();
                                    })
                                    .then(data => {

                                        console.log('Response:', data);
                                        alert(data.message); // Show success message
                                    })
                                    .catch(error => {
                                        console.error('Error:', error);
                                        alert('Error occurred. Please try again.');
                                    });


                            }
                            logout.addEventListener('click', function (e) {
                                e.preventDefault();
                                fetch('/api/logout', {
                                    method: 'get',

                                })
                                    .then(response => {
                                        if (!response.ok) {
                                            throw new Error('Network response was not ok');
                                        }
                                        return response.json();
                                    })
                                    .then(data => {
                                        location.assign('/loginOfDashboard')
                                        console.log('Response:', data);
                                        alert(data.message); // Show success message
                                    })
                                    .catch(error => {
                                        console.error('Error:', error);
                                        alert('Error occurred. Please try again.');
                                    });
                            })

                            // Open Add Product Popup
                            // openPopupButton.addEventListener('click', function () {
                            //     popup.style.display = 'block';
                            // });



                            // closePopupButton.addEventListener('click', function () {
                            //     popup.style.display = 'none';
                            // });
                            document.addEventListener('DOMContentLoaded', function () {
                                const openPopupButton = document.getElementById('add-button');
                                const popup = document.getElementById('popup');
                                const closePopupButton = document.getElementById('closePopup');

                                // Event listener to open the popup
                                openPopupButton.addEventListener('click', function () {
                                    popup.style.display = 'block';
                                });

                                // Event listener to close the popup
                                closePopupButton.addEventListener('click', function () {
                                    popup.style.display = 'none';
                                });

                                // Other JavaScript code for functionality like updating products, deleting products, etc.
                            });

                            // Open Edit Product Popup
                            // updatePopupButton.addEventListener('click', function () {
                            //     update_popup.style.display = 'block';
                            // });

                            // // Close Edit Product Popup
                            // closeUpdateButton.addEventListener('click', function () {
                            //     update_popup.style.display = 'none';
                            // });
                            window.addEventListener('click', function (event) {
                                if (event.target === update_popup) {
                                    update_popup.style.display = 'none';
                                }
                            });

                            document.getElementById('productForm').addEventListener('submit', function (event) {
                                event.preventDefault();
                                const formData = new FormData(); // Create FormData object
                                const description = document.getElementById('description').value;
                                formData.append('description', description);
                                const file = document.getElementById('picture').files[0];
                                formData.append('picture', file);

                                // Fetch POST request
                                fetch('/Products/add', {
                                    method: 'POST',
                                    body: formData
                                })
                                    .then(response => {
                                        if (!response.ok) {
                                            throw new Error('Network response was not ok');
                                        }
                                        return response.json();
                                    })
                                    .then(data => {
                                        console.log('Response:', data);
                                        alert(data.message); // Show success message
                                    })
                                    .catch(error => {
                                        console.error('Error:', error);
                                        alert('Error occurred. Please try again.');
                                    });
                            });


                        </script>

</body>

</html>